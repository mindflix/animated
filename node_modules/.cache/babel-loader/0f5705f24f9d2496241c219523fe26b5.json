{"ast":null,"code":"import _objectWithoutProperties from \"/Users/yolo/Documents/dev/js/animated/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/yolo/Documents/dev/js/animated/src/blocks.js\";\nimport React, { createContext, useRef, useContext } from \"react\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport lerp from \"lerp\";\nimport state from \"./store\";\nvar offsetContext = createContext(0);\n\nfunction Block(_ref) {\n  var children = _ref.children,\n      offset = _ref.offset,\n      factor = _ref.factor,\n      props = _objectWithoutProperties(_ref, [\"children\", \"offset\", \"factor\"]);\n\n  var _useBlock = useBlock(),\n      parentOffset = _useBlock.offset,\n      sectionHeight = _useBlock.sectionHeight;\n\n  var ref = useRef();\n  offset = offset !== undefined ? offset : parentOffset;\n  useFrame(function () {\n    var curY = ref.current.position.y;\n    var curTop = state.top.current;\n    ref.current.position.y = lerp(curY, curTop / state.zoom * factor, 0.1);\n  });\n  return React.createElement(offsetContext.Provider, {\n    value: offset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"group\", Object.assign({}, props, {\n    position: [0, -sectionHeight * offset * factor, 0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"group\", {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, children)));\n}\n\nfunction useBlock() {\n  var sections = state.sections,\n      pages = state.pages,\n      zoom = state.zoom;\n\n  var _useThree = useThree(),\n      size = _useThree.size,\n      viewport = _useThree.viewport;\n\n  var offset = useContext(offsetContext);\n  var viewportWidth = viewport.width;\n  var viewportHeight = viewport.height;\n  var canvasWidth = viewportWidth / zoom;\n  var canvasHeight = viewportHeight / zoom;\n  var mobile = size.width < 700;\n  var margin = canvasWidth * (mobile ? 0.2 : 0.1);\n  var contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\n  var sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\n  var offsetFactor = (offset + 1.0) / sections;\n  return {\n    viewport: viewport,\n    offset: offset,\n    viewportWidth: viewportWidth,\n    viewportHeight: viewportHeight,\n    canvasWidth: canvasWidth,\n    canvasHeight: canvasHeight,\n    mobile: mobile,\n    margin: margin,\n    contentMaxWidth: contentMaxWidth,\n    sectionHeight: sectionHeight,\n    offsetFactor: offsetFactor\n  };\n}\n\nexport { Block, useBlock };","map":{"version":3,"sources":["/Users/yolo/Documents/dev/js/animated/src/blocks.js"],"names":["React","createContext","useRef","useContext","useFrame","useThree","lerp","state","offsetContext","Block","children","offset","factor","props","useBlock","parentOffset","sectionHeight","ref","undefined","curY","current","position","y","curTop","top","zoom","sections","pages","size","viewport","viewportWidth","width","viewportHeight","height","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor"],"mappings":"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","sourcesContent":["import React, { createContext, useRef, useContext } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport state from \"./store\"\n\nconst offsetContext = createContext(0)\n\nfunction Block({ children, offset, factor, ...props }) {\n  const { offset: parentOffset, sectionHeight } = useBlock()\n  const ref = useRef()\n  offset = offset !== undefined ? offset : parentOffset\n  useFrame(() => {\n    const curY = ref.current.position.y\n    const curTop = state.top.current\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\n  })\n  return (\n    <offsetContext.Provider value={offset}>\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n        <group ref={ref}>{children}</group>\n      </group>\n    </offsetContext.Provider>\n  )\n}\n\nfunction useBlock() {\n  const { sections, pages, zoom } = state\n  const { size, viewport } = useThree()\n  const offset = useContext(offsetContext)\n  const viewportWidth = viewport.width\n  const viewportHeight = viewport.height\n  const canvasWidth = viewportWidth / zoom\n  const canvasHeight = viewportHeight / zoom\n  const mobile = size.width < 700\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1)\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\n  const offsetFactor = (offset + 1.0) / sections\n  return {\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n    offsetFactor\n  }\n}\n\nexport { Block, useBlock }\n"]},"metadata":{},"sourceType":"module"}