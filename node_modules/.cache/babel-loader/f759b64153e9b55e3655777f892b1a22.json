{"ast":null,"code":"import _objectWithoutProperties from \"/Users/yolo/Documents/dev/js/animated/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/yolo/Documents/dev/js/animated/src/components/Plane.js\";\nimport React, { forwardRef, useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport lerp from \"lerp\";\nimport \"./CustomMaterial\";\nimport { useBlock } from \"../blocks\";\nimport state from \"../store\";\nvar Plane = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"white\" : _ref$color,\n      _ref$shift = _ref.shift,\n      shift = _ref$shift === void 0 ? 1 : _ref$shift,\n      _ref$opacity = _ref.opacity,\n      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n      args = _ref.args,\n      map = _ref.map,\n      props = _objectWithoutProperties(_ref, [\"color\", \"shift\", \"opacity\", \"args\", \"map\"]);\n\n  var _useBlock = useBlock(),\n      viewportHeight = _useBlock.viewportHeight,\n      offsetFactor = _useBlock.offsetFactor;\n\n  var material = useRef();\n  var last = state.top.current;\n  useFrame(function () {\n    var pages = state.pages,\n        top = state.top;\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1);\n    material.current.shift = lerp(material.current.shift, (top.current - last) / shift, 0.1);\n    last = top.current;\n  });\n  return React.createElement(\"mesh\", Object.assign({\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"customMaterial\", {\n    ref: material,\n    attach: \"material\",\n    color: color,\n    map: map,\n    transparent: true,\n    opacity: opacity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n});\nexport default Plane;","map":{"version":3,"sources":["/Users/yolo/Documents/dev/js/animated/src/components/Plane.js"],"names":["React","forwardRef","useRef","useFrame","lerp","useBlock","state","Plane","ref","color","shift","opacity","args","map","props","viewportHeight","offsetFactor","material","last","top","current","pages","scale"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,KAAK,GAAGN,UAAU,CAAC,gBAAmEO,GAAnE,EAA2E;AAAA,wBAAxEC,KAAwE;AAAA,MAAxEA,KAAwE,2BAAhE,OAAgE;AAAA,wBAAvDC,KAAuD;AAAA,MAAvDA,KAAuD,2BAA/C,CAA+C;AAAA,0BAA5CC,OAA4C;AAAA,MAA5CA,OAA4C,6BAAlC,CAAkC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,GAAyB,QAAzBA,GAAyB;AAAA,MAAjBC,KAAiB;;AAAA,kBACzDT,QAAQ,EADiD;AAAA,MAC1FU,cAD0F,aAC1FA,cAD0F;AAAA,MAC1EC,YAD0E,aAC1EA,YAD0E;;AAElG,MAAMC,QAAQ,GAAGf,MAAM,EAAvB;AACA,MAAIgB,IAAI,GAAGZ,KAAK,CAACa,GAAN,CAAUC,OAArB;AACAjB,EAAAA,QAAQ,CAAC,YAAM;AAAA,QACLkB,KADK,GACUf,KADV,CACLe,KADK;AAAA,QACEF,GADF,GACUb,KADV,CACEa,GADF;AAEbF,IAAAA,QAAQ,CAACG,OAAT,CAAiBE,KAAjB,GAAyBlB,IAAI,CAACa,QAAQ,CAACG,OAAT,CAAiBE,KAAlB,EAAyBN,YAAY,GAAGG,GAAG,CAACC,OAAJ,IAAe,CAACC,KAAK,GAAG,CAAT,IAAcN,cAA7B,CAAxC,EAAsF,GAAtF,CAA7B;AACAE,IAAAA,QAAQ,CAACG,OAAT,CAAiBV,KAAjB,GAAyBN,IAAI,CAACa,QAAQ,CAACG,OAAT,CAAiBV,KAAlB,EAAyB,CAACS,GAAG,CAACC,OAAJ,GAAcF,IAAf,IAAuBR,KAAhD,EAAuD,GAAvD,CAA7B;AACAQ,IAAAA,IAAI,GAAGC,GAAG,CAACC,OAAX;AACD,GALO,CAAR;AAMA,SACE;AAAM,IAAA,GAAG,EAAEZ;AAAX,KAAoBM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAqB,IAAA,MAAM,EAAC,UAA5B;AAAuC,IAAA,IAAI,EAAEF,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAgB,IAAA,GAAG,EAAEK,QAArB;AAA+B,IAAA,MAAM,EAAC,UAAtC;AAAiD,IAAA,KAAK,EAAER,KAAxD;AAA+D,IAAA,GAAG,EAAEI,GAApE;AAAyE,IAAA,WAAW,MAApF;AAAqF,IAAA,OAAO,EAAEF,OAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAhBuB,CAAxB;AAkBA,eAAeJ,KAAf","sourcesContent":["import React, { forwardRef, useRef } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport \"./CustomMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst Plane = forwardRef(({ color = \"white\", shift = 1, opacity = 1, args, map, ...props }, ref) => {\n  const { viewportHeight, offsetFactor } = useBlock()\n  const material = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    const { pages, top } = state\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\n    material.current.shift = lerp(material.current.shift, (top.current - last) / shift, 0.1)\n    last = top.current\n  })\n  return (\n    <mesh ref={ref} {...props}>\n      <planeBufferGeometry attach=\"geometry\" args={args} />\n      <customMaterial ref={material} attach=\"material\" color={color} map={map} transparent opacity={opacity} />\n    </mesh>\n  )\n})\n\nexport default Plane\n"]},"metadata":{},"sourceType":"module"}